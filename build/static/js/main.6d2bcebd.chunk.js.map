{"version":3,"sources":["components/NavBar.js","actions/cart.js","components/ViewCart.js","components/Home.js","components/CartBadge.js","constants/index.js","components/Review.js","components/ReviewForm.js","actions/reviews.js","components/Features.js","actions/features.js","components/Product.js","components/ProductList.js","actions/products.js","App.js","serviceWorker.js","reducers/index.js","reducers/products.js","reducers/reviews.js","reducers/cart.js","reducers/network-status.js","reducers/features.js","store/index.js","index.js"],"names":["NavBar","_ref","title","react_default","a","createElement","className","href","buy","item","type","connect","state","props","cart","dispatch","actions","bindActionCreators","map","idx","key","name","price","onClick","e","handleBuy","renderCatItems","Home","role","CartBadge","this","length","Component","NETWORK_REQUEST_BEGIN","NETWORK_REQUEST_SUCCESS","LOAD_PRODUCTS_SUCCESS","LOAD_REVIEWS_SUCCESS","LOAD_FEATURES_SUCCESS","SUBMIT_NEW_REVIEW","BUY","Review","review","style","color","n","arr","i","push","renderStars","stars","author","body","ReviewForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isFormOpen","setState","fieldId","target","id","fieldValue","value","defineProperty","preventDefault","_this$state","onNewReview","toggleForm","_this2","_this$state2","onSubmit","handleForm","onChange","handleChange","disabled","isValidForm","renderForm","loadReviews","productId","api","concat","fetch","then","response","json","data","reviews","submitNewReview","method","headers","Content-Type","JSON","stringify","newReview","Features","loadFeatures","features","console","log","specifications","spec","detail","message","catch","error","Product","tab","product","_this3","canBuy","rev","components_Review","_this4","description","components_Features","renderReviews","components_ReviewForm","addNewReview","firstName","lastName","email","renderBuyBtn","renderTabPanel","ProductList","loadProducts","products","p","components_Product","renderProducts","customers","setTimeout","NoMatch","location","pathname","App","BrowserRouter","components_NavBar","components_CartBadge","Link","to","status","Switch","Route","path","exact","component","render","components_ViewCart","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","rootreducer","combineReducers","arguments","undefined","action","toConsumableArray","newReviews","assign","objectSpread","prodFeatures","middleware","ReduxThunk","composeEnhancers","composeWithDevTools","store","createStore","rootReducer","applyMiddleware","apply","ReactDOM","es","src_App","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6d2bcebd.chunk.js","sourcesContent":["// import React, { Component } from 'react';\n// way-1: class syntax\n// import PropTypes from 'prop-types'\n// class NavBar extends Component {\n//     render() {\n//         let { title } = this.props;\n//         return (\n//             <div>\n//                 <nav className=\"navbar navbar-light bg-primary\">\n//                     <a className=\"navbar-brand\" href=\"/\">{title}</a>\n//                 </nav>\n//             </div>\n//         );\n//     }\n// }\n\n// NavBar.propTypes = {\n//     title: PropTypes.string\n// };\n\n// export default NavBar;\n\n//-------------------------------------------------------------------------------------\n\n// way-2 : function syntax\n\n\nimport React from 'react';\n\n// export default function navBar(props) {\n//     let { title } = props;\n//     return (\n//         <div>\n//             <nav className=\"navbar navbar-light bg-primary\">\n//                 <a className=\"navbar-brand\" href=\"/\">{title}</a>\n//             </nav>\n//         </div>\n//     );\n// }\n// or\n// export default function navBar({ title }) {\n//     return (\n//         <div>\n//             <nav className=\"navbar navbar-light bg-primary\">\n//                 <a className=\"navbar-brand\" href=\"/\">{title}</a>\n//             </nav>\n//         </div>\n//     );\n// }\n// or\n\nlet NavBar = ({ title }) => {\n    return (\n        <div>\n            <nav className=\"navbar navbar-light bg-primary\">\n                <a className=\"navbar-brand\" href=\"/\">{title}</a>\n            </nav>\n        </div>\n    );\n}\n\nexport default NavBar;\n\n//-------------------------------------------------------------------------------------","\nexport function buy(item) {\n    return { type: 'BUY', item }\n}","import React from 'react'\n\nimport { buy } from '../actions/cart'\nimport { connect } from 'react-redux'\n\nimport { bindActionCreators } from 'redux'\n\nfunction handleBuy(item, props) {\n    props.actions.buy(item)\n}\nfunction renderCatItems(cart, props) {\n    return cart.map((item, idx) => {\n        return (\n            <tr key={idx}>\n                <td>{item.name}</td>\n                <td>&#8377;{item.price}</td>\n                <td>{1}</td>\n                <td>&#8377;{item.price * 1}</td>\n                <td><span className=\"badge badge-primary\" onClick={e => handleBuy(item, props)}><i className=\"fa fa-plus\"></i></span></td>\n                <td><span className=\"badge badge-primary\"><i className=\"fa fa-minus\"></i></span></td>\n            </tr>\n        )\n    });\n}\nlet ViewCart = props => {\n    let { cart } = props;\n    return (\n        <div>\n            <div className=\"card card-default\"></div>\n            <div className=\"card-header\">Items in cart</div>\n            <div className=\"card-body\">\n                <table className=\"table table-bordred table-sm\">\n                    <tbody>\n                        {renderCatItems(cart, props)}\n                    </tbody>\n                </table>\n                <hr />\n                <button className=\"btn btn-primary\">checkout</button>\n            </div>\n        </div>\n    );\n}\n\nfunction mapStateToProps(state, props) {\n    return {\n        cart: state.cart\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    let actions = { buy }\n    return {\n        actions: bindActionCreators(actions, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewCart);","import React from 'react';\nlet Home = props => {\n    return (\n        <div className=\"jumbotron\">\n            <h1 className=\"display-4\">welcome to shopIT!</h1>\n            <hr className=\"my-4\" />\n            <a className=\"btn btn-primary btn-lg\" href=\"/\" role=\"button\">Learn React</a>\n        </div>\n    );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nclass CartBadge extends Component {\n    render() {\n        let { cart } = this.props;\n        return (\n            <div>\n                <i className=\"fa fa-shopping-cart\"></i> &nbsp;\n                <span className=\"badge badge-primary\">{cart.length}</span> item(s) in cart\n            </div>\n        );\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        cart: state.cart\n    }\n}\nexport default connect(mapStateToProps, null)(CartBadge);","export const NETWORK_REQUEST_BEGIN = \"NETWORK_REQUEST_BEGIN\"\nexport const NETWORK_REQUEST_SUCCESS = \"NETWORK_REQUEST_SUCCESS\"\n\n\nexport const LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\"\nexport const LOAD_REVIEWS_SUCCESS = \"LOAD_REVIEWS_SUCCESS\";\nexport const LOAD_FEATURES_SUCCESS = \"LOAD_FEATURES_SUCCESS\";\n\nexport const LOAD_REVIEWS_FAILED = \"LOAD_REVIEWS_FAILED\";\nexport const SUBMIT_NEW_REVIEW = \"SUBMIT_NEW_REVIEW\"\nexport const LOAD_FEATURES_FAILED = \"LOAD_FEATURES_FAILED\";\n\nexport const BUY = \"BUY\"\nexport const BUY_ASYNC = \"BUY_ASYNC\"\nexport const CHECKOUT = \"CHECKOUT\"","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction renderStars(n) {\n    let arr = [];\n    for (let i = 0; i < n; i++) {\n        arr.push(<i className=\"fa fa-star\" key={i}></i>)\n    }\n    return arr;\n}\n\nlet Review = (props) => {\n    // let { review } = props\n    //or\n    let review = props.review\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <div className=\"alert alert-info\">\n                    <span style={{ color: \"red\" }}>{renderStars(review.stars)}</span> &mdash; {review.author}\n                    <hr />\n                    <p>{review.body}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nReview.propTypes = {\n    review: PropTypes.object.isRequired\n}\n\nexport default Review;","import React, { Component } from 'react';\n\nclass ReviewForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isFormOpen: false,\n            stars: 5,\n            author: 'nag@email.com',\n            body: ''\n        }\n    }\n    toggleForm() {\n        let { isFormOpen } = this.state;\n        this.setState({ isFormOpen: !isFormOpen })\n    }\n    handleChange(e) {\n        let fieldId = e.target.id;\n        let fieldValue = e.target.value;\n        this.setState({ [fieldId]: fieldValue })\n    }\n    handleForm(e) {\n        e.preventDefault();\n        let { stars, author, body } = this.state;\n        let review = { stars, author, body };\n        let { onNewReview } = this.props;\n        onNewReview(review)\n        this.toggleForm();\n    }\n    isValidForm() {\n        let { stars } = this.state;\n        if (stars < 4) return true\n        return false\n    }\n    renderForm() {\n        let { isFormOpen, stars, author, body } = this.state;\n        if (!isFormOpen) return (<button className=\"btn btn-info\" onClick={e => this.toggleForm()}><i className=\"fa fa-plus\"></i></button>)\n        else return (\n            <div className=\"card card-default\">\n                <div className=\"card-header\">Review Form</div>\n                <div className=\"card-body\">\n                    <form onSubmit={e => this.handleForm(e)}>\n                        <div className=\"form-group\">\n                            <label>stars</label>\n                            <select className=\"form-control\" id=\"stars\" value={stars} onChange={e => this.handleChange(e)}>\n                                {[1, 2, 3, 4, 5].map((n, idx) => <option key={idx}>{n}</option>)}\n                            </select>\n                            <span className=\"text text-danger\">{stars < 4 ? \"please give more stars\" : null}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>author</label>\n                            <input className=\"form-control\" id=\"author\" value={author} onChange={e => this.handleChange(e)} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>body</label>\n                            <textarea className=\"form-control\" id=\"body\" value={body} onChange={e => this.handleChange(e)}></textarea>\n                        </div>\n                        <button className=\"btn btn-dark\" disabled={this.isValidForm()}>submit</button>&nbsp;\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={e => this.toggleForm()}>cancel</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 col-sm-10 col-md-10\">\n                    {this.renderForm()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ReviewForm;","import { LOAD_REVIEWS_SUCCESS, SUBMIT_NEW_REVIEW } from '../constants'\n\nexport function loadReviews(productId) {\n    return function (dispatch) {\n        let api = `http://localhost:4003/v1/products/${productId}/reviews`;\n        fetch(api)\n            .then(response => response.json())\n            .then(data => {\n                const {reviews} = data;\n                dispatch({ type: LOAD_REVIEWS_SUCCESS, reviews, productId })\n            })\n    }\n}\n\nexport function submitNewReview(review, productId) {\n    return function (dispatch) {\n        let api = `http://localhost:4003/v1/products/${productId}/reviews`;\n        fetch(api,\n            {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(review)\n            })\n            .then(response => response.json())\n            .then(data => {\n                const {reviews} = data;\n                dispatch({ type: SUBMIT_NEW_REVIEW, newReview: reviews, productId })\n            })\n    }\n}","import React, { Component } from 'react';\r\n\r\nimport { loadFeatures } from '../actions/features';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Features extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n        //debugger;\r\n        let productId = this.props.productId;\r\n        this.props.loadFeatures(productId);\r\n    }\r\n\r\n    render() {\r\n        //debugger;\r\n        const {features}=this.props;\r\n        console.log(features);\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-sm-10 col-md-10\">\r\n                    <div className=\"alert alert-info\">\r\n                    <h4>Highlights</h4>\r\n                    <hr />\r\n                        {(features.length>0 && features[0].specifications)?\r\n                        (\r\n                            <ol>                            \r\n                                {features[0].specifications.map(spec => (\r\n                                    <li>{spec.detail}</li>\r\n                                ))}         \r\n                            </ol>\r\n                        )\r\n                        :\r\n                        (      \r\n                            <ul>                            \r\n                                <li>Specifications to be defined</li>     \r\n                            </ul>\r\n                        )}                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state,props) {\r\n    //debugger;\r\n    let  productId = props.productId;\r\n    return {      \r\n        features: state.features[productId]||[]     \r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadFeatures: (productId) => { dispatch(loadFeatures(productId)) }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Features);\r\n","import { NETWORK_REQUEST_BEGIN, LOAD_FEATURES_SUCCESS } from '../constants'\r\n\r\nexport function loadFeatures(productId) {\r\n    return function (dispatch) {\r\n        dispatch({ type: NETWORK_REQUEST_BEGIN, message: 'Loading features' }) // before request\r\n        //debugger;\r\n        let api = `http://localhost:4003/v1/products/${productId}/features`;\r\n        fetch(api)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                //debugger;\r\n                const {features} = data;\r\n                dispatch({ type: LOAD_FEATURES_SUCCESS, features, productId })\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: 'NETWORK_REQUEST_FAILED', message: 'Oops, not able to  api server' }) // after success\r\n            })\r\n\r\n    }\r\n}\r\n\r\n","\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Review from './Review';\nimport ReviewForm from './ReviewForm';\n\nimport { loadReviews, submitNewReview } from '../actions/reviews';\nimport { buy } from '../actions/cart'\n//import { loadFeatures} from '../actions/reviews';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Features from './Features';\n\nclass Product extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tab: 1,\n        }\n    }\n    addNewReview(review) {\n        let product = this.props.value;\n        let { actions } = this.props;\n        actions.submitNewReview(review, product.id);\n    }\n    changeTab(idx, e) {\n        e.preventDefault();\n        this.setState({ tab: idx }, () => {\n            if (idx === 3) {\n                let product = this.props.value;\n                let { actions } = this.props;\n                actions.loadReviews(product.id)\n            }\n            else if (idx === 2) {\n                // let product = this.props.value;\n                // let { actions } = this.props;\n                // actions.loadFeatures(product.id)\n            }\n        });\n    }\n    handleBuy() {\n        let item = this.props.value;\n        let { actions } = this.props;\n        actions.buy(item)\n    }\n    renderBuyBtn(product) {\n        if (product.canBuy) return (<button onClick={e => this.handleBuy()} className=\"btn btn-sm btn-primary\">buy</button>)\n        else return null\n    }\n    renderReviews() {\n        let { reviews } = this.props;\n        return reviews.map((rev, idx) => {\n            return <Review review={rev} key={idx} />\n        })\n    }\n\n    renderTabPanel(product) {\n        let { tab } = this.state;\n        switch (tab) {\n            case 1: return (<div><hr/><div className=\"row\"><div className=\"col-12 col-sm-10 col-md-10\"><div className=\"alert alert-info\">{product.description}</div></div></div></div>)\n            case 2: return (\n            <div>\n                 {/* <div><h2>{product.name} Specifications</h2></div> */}\n                  <hr/>                  \n                 {/* <SpecificationForm specs={product.specifications} /> */}\n                 <Features productId={product.id}/>\n                 </div>)\n            case 3: return (\n                <div>\n                    {/* <div><h2>{product.name} Reviews</h2></div> */}\n                    <hr/>        \n                    {this.renderReviews()}\n                    <hr/>\n                    <ReviewForm onNewReview={review => this.addNewReview(review)} />\n                </div>\n            )\n            default: return null;\n        }\n    }\n    render() {\n        // let { value: product } = this.props;\n        // or\n        let product = this.props.value;\n        let { tab } = this.state;\n        return (\n            <div>\n                <div className=\"list-group-item\">\n                    <div className=\"row\">\n                        {/* <div className=\"col-3 col-sm-3 col-md-3\">\n                            <img src={product.image} alt=\"product\" className=\"img-fluid\" />\n                        </div> */}\n                        <div className=\"col-9 col-sm-9 col-md-9\">\n                            <h5>{product.firstName}</h5>\n                            {/* <h6>&#8377;{product.lastName}</h6> */}\n                            <h6>{product.lastName}</h6>\n                            <h7>{product.email}</h7>\n                            {this.renderBuyBtn(product)}\n                            <hr />\n                            {/* <ul className=\"nav nav-tabs\">\n                                <li className=\"nav-item\">\n                                    <a className={tab === 1 ? 'nav-link active' : 'nav-link'} onClick={e => this.changeTab(1, e)} href=\"/\">Description</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className={classNames('nav-link', { active: tab === 2 })} onClick={e => this.changeTab(2, e)} href=\"/\">Specification</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className={classNames('nav-link', { active: tab === 3 })} onClick={e => this.changeTab(3, e)} href=\"/\">Reviews</a>\n                                </li>\n                            </ul> */}\n                            {this.renderTabPanel(product)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProduct.propTypes = {\n    value: PropTypes.object\n}\n\n\nfunction mapStateToProps(state, props) {\n    let product = props.value\n    return {\n        reviews: state.reviews[product.id] || []\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    let actions = { loadReviews, submitNewReview, buy }\n    return {\n        actions: bindActionCreators(actions, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React, { Component } from 'react';\n\n\nimport { loadProducts } from '../actions/products';\nimport { connect } from 'react-redux'\nimport Product from './Product';\n\nclass ProductList extends Component {\n    componentDidMount() {\n        this.props.loadProducts();\n    }\n    renderProducts() {\n        let { products } = this.props;\n        return products.map((p, idx) => {\n            return (\n                <Product value={p} key={idx} />\n            )\n        })\n    }\n    render() {\n        return (\n            <div>\n                {this.renderProducts()}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        products: state.products,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadProducts: () => { dispatch(loadProducts()) }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\n","import { NETWORK_REQUEST_BEGIN, NETWORK_REQUEST_SUCCESS, LOAD_PRODUCTS_SUCCESS } from '../constants'\n\nexport function loadProducts(size) {\n    return function (dispatch) {\n        dispatch({ type: NETWORK_REQUEST_BEGIN, message: 'Loading customers' }) // before request\n        let api = \"https://igurukul-njcms.herokuapp.com/v1/customers\";\n        fetch(api)\n            .then(response => response.json())\n            .then(data => {\n                //debugger;\n                const {customers} = data;\n                setTimeout(() => {\n                    dispatch({ type: NETWORK_REQUEST_SUCCESS, message: '' }) // after success\n                    dispatch({ type: LOAD_PRODUCTS_SUCCESS, customers })\n                }, 2000)\n            })\n            .catch(error => {\n                dispatch({ type: 'NETWORK_REQUEST_FAILED', message: 'Oops, not able to  api server' }) // after success\n            })\n\n    }\n}\n\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport ViewCart from './components/ViewCart';\n\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from './components/Home';\n\n\nimport { connect } from 'react-redux'\nimport CartBadge from './components/CartBadge';\nimport ProductList from './components/ProductList';\n\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h3>\n      No match for <code>{location.pathname}</code>\n    </h3>\n  </div>\n);\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"container\" >\n        <Router>\n          <div>\n            <NavBar title=\"online-shopping\" />\n            <hr />\n            <CartBadge />\n            <hr />\n            <ul className=\"nav nav-pills\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"products\">View Customers</Link>\n              </li>\n              {/* <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"cart\">View cart</Link>\n              </li> */}\n            </ul>\n            <hr />\n            <div className=\"alert alert-info\">\n              {this.props.status.message}\n            </div>\n            <Switch>\n              <Route path={\"/\"} exact={true} component={Home} />\n              <Route path={\"/products\"} component={ProductList} />\n              <Route path={\"/cart\"} render={() => <ViewCart />} />\n              <Route exact={true} component={NoMatch} />\n            </Switch>\n\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    status: state.status\n  }\n}\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { productsReducer } from './products';\nimport { reviewsReducer } from './reviews';\nimport { cartReducer } from './cart';\nimport { statusReducer } from './network-status';\nimport { featuresReducer } from './features';\n\n\nconst rootreducer = combineReducers({\n    products: productsReducer,\n    reviews: reviewsReducer,\n    cart: cartReducer,\n    status:statusReducer,\n    features:featuresReducer\n});\n\nexport default rootreducer;","\nimport { LOAD_PRODUCTS_SUCCESS } from '../constants'\n\nexport function productsReducer(state = [], action) {\n    console.log('state: ', state);\n    switch (action.type) {\n        case LOAD_PRODUCTS_SUCCESS: return [...action.customers]\n        default: return state;\n    }\n}\n","\nimport { LOAD_REVIEWS_SUCCESS, SUBMIT_NEW_REVIEW } from '../constants'\n\nexport function reviewsReducer(state = {}, action) {\n    let { productId } = action;\n    //let existingReviews = state[productId] || []\n    switch (action.type) {\n        case LOAD_REVIEWS_SUCCESS: {\n            let { productId, reviews } = action;\n            //let newReviews = [...existingReviews, ...reviews]\n            let newReviews = [...reviews]\n            return Object.assign({}, state, { [productId]: newReviews })\n        }\n        case SUBMIT_NEW_REVIEW: {\n            let { newReview } = action;\n            //let newReviews = existingReviews.concat(newReview)\n            let newReviews = [...newReview]\n            return Object.assign({}, state, { [productId]: newReviews })\n        }\n        default: return state;\n    }\n}","\n\nimport { BUY } from '../constants'\n\nexport function cartReducer(state = [], action) {\n    switch (action.type) {\n        case BUY: return [...state, action.item]\n        default: return state\n    }\n}","\nimport { NETWORK_REQUEST_BEGIN, NETWORK_REQUEST_SUCCESS } from '../constants'\n\nexport function statusReducer(state = {}, action) {\n    switch (action.type) {\n        case NETWORK_REQUEST_BEGIN:\n        case NETWORK_REQUEST_SUCCESS:\n        case 'NETWORK_REQUEST_FAILED':\n            {\n                return { ...state, ...action }\n            }\n        default:\n            return state;\n    }\n}","\r\nimport { LOAD_FEATURES_SUCCESS} from '../constants'\r\n\r\nexport function featuresReducer(state = {}, action) {\r\n    console.log('state: ', state);\r\n    switch (action.type) {\r\n        case LOAD_FEATURES_SUCCESS: {\r\n            //debugger;\r\n            let { productId, features } = action;\r\n            let prodFeatures = [ ...features]\r\n            return Object.assign({}, state, { [productId]: prodFeatures })\r\n        }\r\n        default: return state;\r\n    }\r\n}","\n\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nconst preLoadedState = {\n    products: [],\n    features: [],\n    reviews: {},\n    cart: [],\n    status: {}\n};\n\nlet middleware = [ReduxThunk];\n\n// in dev, to connect store with dev-tools\n\nconst composeEnhancers = composeWithDevTools({\n    // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\nconst store = createStore(rootReducer, preLoadedState, composeEnhancers(\n    applyMiddleware(...middleware),\n));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();\n\n\n\n"],"sourceRoot":""}